import ICanvasApi from "../types/CanvasApi";
import { SocketManager } from "./socket";
import { BaseStyle } from "../class/BaseStyle";
import { TextStyle } from "../class/TextStyle";
import { BarcodeStyle } from "../class/BarcodeStyle";
import { QrStyle } from "../class/QrStyle";
import { BitmapStyle } from "../class/BitmapStyle";
import { AreaStyle } from "../class/AreaStyle";
import { LabelStyle } from "class/LabelStyle";
declare class CanvasApi implements ICanvasApi {
    socket: SocketManager;
    constructor(socket: SocketManager);
    initCanvas: (baseStyle: BaseStyle | LabelStyle) => Promise<unknown>;
    renderText: (text: string, textStyle: TextStyle) => Promise<unknown>;
    renderBarCode: (code: string, barcodeStyle: BarcodeStyle) => Promise<unknown>;
    renderQrCode: (test: string, style: QrStyle) => Promise<unknown>;
    renderBitmap: (bitmap: string, style: BitmapStyle) => Promise<unknown>;
    renderArea: (format: AreaStyle) => Promise<unknown>;
    printCanvas: (count: number) => Promise<unknown>;
}
export default CanvasApi;
