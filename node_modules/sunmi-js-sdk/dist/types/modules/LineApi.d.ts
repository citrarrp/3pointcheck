import { BaseStyle } from "../class/BaseStyle";
import { TextStyle } from "../class/TextStyle";
import { BarcodeStyle } from "../class/BarcodeStyle";
import { QrStyle } from "../class/QrStyle";
import { BitmapStyle } from "../class/BitmapStyle";
import { LabelStyle } from "class/LabelStyle";
import { DividingLine } from "enum";
import ILineApi from "../types/LineApi";
import { SocketManager } from "./socket";
declare class LineApi implements ILineApi {
    socket: SocketManager;
    constructor(socket: SocketManager);
    initLine: (baseStyle: BaseStyle | LabelStyle) => Promise<unknown>;
    addText: (text: string, textStyle: TextStyle) => Promise<unknown>;
    printText: (text: string, textStyle: TextStyle) => Promise<unknown>;
    printTexts: (text: string[], colsWidthArr: number[], textStyle: TextStyle[]) => Promise<unknown>;
    printBarCode: (code: string, style: BarcodeStyle) => Promise<unknown>;
    printQrCode: (code: string, qrStyle: QrStyle) => Promise<unknown>;
    printBitmap: (bitmap: string, style: BitmapStyle) => Promise<unknown>;
    printDividingLine: (style: DividingLine, offset: number) => Promise<unknown>;
    autoOut: () => Promise<unknown>;
    enableTransMode: (enable: boolean) => Promise<unknown>;
    printTrans: () => Promise<unknown>;
}
export default LineApi;
